import 'dart:async';
import 'dart:math';

import 'package:angular/core.dart';

@Injectable()
class ExerciseService {
  List<String> mockTodoList = <String>[];
  
  Map<String,String> _bindings = {
    'ㄅ': 'b',
    'ㄆ': 'p',
    'ㄇ': 'm',
    'ㄈ': 'f',
    'ㄉ': 'd',
    'ㄊ': 't',
    'ㄋ': 'n',
    'ㄌ': 'l',
    'ㄍ': 'v',
    'ㄎ': 'k',
    'ㄏ': 'h',
    'ㄐ': 'g',
    'ㄑ': 'v',
    'ㄒ': 'c',
    'ㄓ': 'g',
    'ㄔ': 'y',
    'ㄕ': 'c',
    'ㄖ': 'j',
    'ㄗ': 'q',
    'ㄘ': 'w',
    'ㄙ': 's',
    'ㄧ': 'e',
    'ㄨ': 'x',
    'ㄩ': 'u',
    'ㄚ': 'a',
    'ㄛ': 'o',
    'ㄜ': 'r',
    'ㄝ': 'w',
    'ㄞ': 'i',
    'ㄟ': 'q',
    'ㄠ': 'z',
    'ㄡ': 'p',
    'ㄢ': 'm',
    'ㄣ': 'n',
    'ㄤ': 't',
    'ㄥ': 'l',
    'ㄦ': 'h',
    '˙': 'd',
    'ˊ': 'f',
    'ˇ': 'j',
    'ˋ': 'k',
    ' ': ' ',
  };
  
  List<List<String>> groups = [
    [
      'ㄅ', 'ㄆ', 'ㄇ', 'ㄈ',
      'ㄉ', 'ㄊ', 'ㄋ', 'ㄌ'
      'ㄍ', 'ㄎ', 'ㄏ',
      'ㄐ', 'ㄑ', 'ㄒ',
      'ㄓ', 'ㄔ', 'ㄕ', 'ㄖ',
      'ㄗ', 'ㄘ', 'ㄙ'
    ],
    [
      'ㄧ', 'ㄨ', 'ㄩ'
    ],
    [
      'ㄚ', 'ㄛ', 'ㄜ', 'ㄝ',
      'ㄞ', 'ㄟ', 'ㄠ', 'ㄡ',
      'ㄢ', 'ㄣ', 'ㄤ', 'ㄥ',
      'ㄦ'
    ]
  ];

  List<String> accents = [
    ' ', '˙', 'ˊ', 'ˇ', 'ˋ'
  ];
  
  List<String> combos = [
    'ㄅㄚ',
    'ㄅㄞ',
    'ㄅㄢ',
    'ㄅㄤ',
    'ㄅㄠ',
    'ㄅㄟ',
    'ㄅㄣ',
    'ㄅㄥ',
    'ㄅㄧ',
    'ㄅㄧㄠ',
    'ㄅㄧㄝ',
    'ㄅㄧㄢ',
    'ㄅㄧㄣ',
    'ㄅㄧㄥ',
    'ㄅㄛ',
    'ㄅㄨ',
    'ㄆㄚ',
    'ㄆㄞ',
    'ㄆㄢ',
    'ㄆㄤ',
    'ㄆㄠ',
    'ㄆㄟ',
    'ㄆㄣ',
    'ㄆㄥ',
    'ㄆㄧ',
    'ㄆㄧㄠ',
    'ㄆㄧㄝ',
    'ㄆㄧㄢ',
    'ㄆㄧㄣ',
    'ㄆㄧㄥ',
    'ㄆㄛ',
    'ㄆㄡ',
    'ㄆㄨ',
    'ㄇㄚ',
    'ㄇㄞ',
    'ㄇㄢ',
    'ㄇㄤ',
    'ㄇㄠ',
    'ㄇㄟ',
    'ㄇㄣ',
    'ㄇㄥ',
    'ㄇㄧ',
    'ㄇㄧㄠ',
    'ㄇㄧㄝ',
    'ㄇㄧㄢ',
    'ㄇㄧㄣ',
    'ㄇㄧㄥ',
    'ㄇㄧㄡ',
    'ㄇㄛ',
    'ㄇㄡ',
    'ㄇㄨ',
    'ㄈㄚ',
    'ㄈㄢ',
    'ㄈㄤ',
    'ㄈㄟ',
    'ㄈㄣ',
    'ㄈㄥ',
    'ㄈㄛ',
    'ㄈㄡ',
    'ㄈㄨ',
    'ㄉㄚ',
    'ㄉㄞ',
    'ㄉㄢ',
    'ㄉㄤ',
    'ㄉㄠ',
    'ㄉㄜ',
    'ㄉㄟ',
    'ㄉㄥ',
    'ㄉㄧ',
    'ㄉㄧㄠ',
    'ㄉㄧㄝ',
    'ㄉㄧㄢ',
    'ㄉㄧㄥ',
    'ㄉㄧㄡ',
    'ㄉㄨㄛ',
    'ㄉㄡ',
    'ㄉㄨ',
    'ㄉㄨㄢ',
    'ㄉㄨㄟ',
    'ㄉㄨㄣ',
    'ㄉㄨㄥ',
    'ㄊㄚ',
    'ㄊㄞ',
    'ㄊㄢ',
    'ㄊㄤ',
    'ㄊㄠ',
    'ㄊㄜ',
    'ㄊㄥ',
    'ㄊㄧ',
    'ㄊㄧㄠ',
    'ㄊㄧㄝ',
    'ㄊㄧㄢ',
    'ㄊㄧㄥ',
    'ㄊㄨㄛ',
    'ㄊㄡ',
    'ㄊㄨ',
    'ㄊㄨㄢ',
    'ㄊㄨㄟ',
    'ㄊㄨㄣ',
    'ㄊㄨㄥ',
    'ㄋㄚ',
    'ㄋㄞ',
    'ㄋㄢ',
    'ㄋㄤ',
    'ㄋㄠ',
    'ㄋㄜ',
    'ㄋㄟ',
    'ㄋㄣ',
    'ㄋㄥ',
    'ㄋㄧ',
    'ㄋㄧㄤ',
    'ㄋㄧㄠ',
    'ㄋㄧㄝ',
    'ㄋㄧㄢ',
    'ㄋㄧㄣ',
    'ㄋㄧㄥ',
    'ㄋㄧㄡ',
    'ㄋㄨㄛ',
    'ㄋㄡ',
    'ㄋㄨ',
    'ㄋㄨㄢ',
    'ㄋㄨㄣ',
    'ㄋㄨㄥ',
    'ㄋㄩ',
    'ㄋㄩㄝ',
    'ㄌㄚ',
    'ㄌㄞ',
    'ㄌㄢ',
    'ㄌㄤ',
    'ㄌㄠ',
    'ㄌㄜ',
    'ㄌㄟ',
    'ㄌㄥ',
    'ㄌㄧ',
    'ㄌㄧㄚ',
    'ㄌㄧㄤ',
    'ㄌㄧㄠ',
    'ㄌㄧㄝ',
    'ㄌㄧㄢ',
    'ㄌㄧㄣ',
    'ㄌㄧㄥ',
    'ㄌㄧㄡ',
    'ㄌㄨㄛ',
    'ㄌㄡ',
    'ㄌㄨ',
    'ㄌㄨㄢ',
    'ㄌㄨㄣ',
    'ㄌㄨㄥ',
    'ㄌㄩ',
    'ㄌㄩㄢ',
    'ㄌㄩㄝ',
    'ㄍㄚ',
    'ㄍㄞ',
    'ㄍㄢ',
    'ㄍㄤ',
    'ㄍㄠ',
    'ㄍㄜ',
    'ㄍㄟ',
    'ㄍㄣ',
    'ㄍㄥ',
    'ㄍㄡ',
    'ㄍㄨ',
    'ㄍㄨㄚ',
    'ㄍㄨㄞ',
    'ㄍㄨㄢ',
    'ㄍㄨㄤ',
    'ㄍㄨㄟ',
    'ㄍㄨㄣ',
    'ㄍㄨㄥ',
    'ㄍㄨㄛ',
    'ㄎㄚ',
    'ㄎㄞ',
    'ㄎㄢ',
    'ㄎㄤ',
    'ㄎㄠ',
    'ㄎㄜ',
    'ㄎㄣ',
    'ㄎㄥ',
    'ㄎㄡ',
    'ㄎㄨ',
    'ㄎㄨㄚ',
    'ㄎㄨㄞ',
    'ㄎㄨㄢ',
    'ㄎㄨㄤ',
    'ㄎㄨㄟ',
    'ㄎㄨㄣ',
    'ㄎㄨㄥ',
    'ㄎㄨㄛ',
    'ㄏㄚ',
    'ㄏㄞ',
    'ㄏㄢ',
    'ㄏㄤ',
    'ㄏㄠ',
    'ㄏㄟ',
    'ㄏㄣ',
    'ㄏㄥ',
    'ㄏㄜ',
    'ㄏㄡ',
    'ㄏㄨ',
    'ㄏㄨㄚ',
    'ㄏㄨㄞ',
    'ㄏㄨㄢ',
    'ㄏㄨㄤ',
    'ㄏㄨㄟ',
    'ㄏㄨㄣ',
    'ㄏㄨㄥ',
    'ㄏㄨㄛ',
    'ㄐㄧ',
    'ㄐㄧㄚ',
    'ㄐㄧㄤ',
    'ㄐㄧㄠ',
    'ㄐㄧㄝ',
    'ㄐㄧㄢ',
    'ㄐㄧㄣ',
    'ㄐㄧㄥ',
    'ㄐㄧㄡ',
    'ㄐㄩㄥ',
    'ㄐㄩ',
    'ㄐㄩㄢ',
    'ㄐㄩㄝ',
    'ㄐㄩㄣ',
    'ㄑㄧ',
    'ㄑㄧㄚ',
    'ㄑㄧㄤ',
    'ㄑㄧㄠ',
    'ㄑㄧㄝ',
    'ㄑㄧㄢ',
    'ㄑㄧㄣ',
    'ㄑㄧㄥ',
    'ㄑㄧㄡ',
    'ㄑㄩㄥ',
    'ㄑㄩ',
    'ㄑㄩㄢ',
    'ㄑㄩㄝ',
    'ㄑㄩㄣ',
    'ㄒㄧ',
    'ㄒㄧㄚ',
    'ㄒㄧㄤ',
    'ㄒㄧㄠ',
    'ㄒㄧㄝ',
    'ㄒㄧㄢ',
    'ㄒㄧㄣ',
    'ㄒㄧㄥ',
    'ㄒㄧㄡ',
    'ㄒㄩㄥ',
    'ㄒㄩ',
    'ㄒㄩㄢ',
    'ㄒㄩㄝ',
    'ㄒㄩㄣ',
    'ㄓㄚ',
    'ㄓㄞ',
    'ㄓㄢ',
    'ㄓㄤ',
    'ㄓㄠ',
    'ㄓㄜ',
    'ㄓㄟ',
    'ㄓㄣ',
    'ㄓㄥ',
    'ㄓㄨㄛ',
    'ㄓㄡ',
    'ㄓㄨ',
    'ㄓㄨㄚ',
    'ㄓㄨㄞ',
    'ㄓㄨㄢ',
    'ㄓㄨㄤ',
    'ㄓㄨㄟ',
    'ㄓㄨㄣ',
    'ㄓㄨㄥ',
    'ㄓ',
    'ㄔㄚ',
    'ㄔㄞ',
    'ㄔㄢ',
    'ㄔㄤ',
    'ㄔㄠ',
    'ㄔㄜ',
    'ㄔㄣ',
    'ㄔㄥ',
    'ㄔㄨㄛ',
    'ㄔㄡ',
    'ㄔㄨ',
    'ㄔㄨㄚ',
    'ㄔㄨㄞ',
    'ㄔㄨㄢ',
    'ㄔㄨㄤ',
    'ㄔㄨㄟ',
    'ㄔㄨㄣ',
    'ㄔㄨㄥ',
    'ㄔ',
    'ㄕㄚ',
    'ㄕㄞ',
    'ㄕㄢ',
    'ㄕㄤ',
    'ㄕㄠ',
    'ㄕㄜ',
    'ㄕㄟ',
    'ㄕㄣ',
    'ㄕㄥ',
    'ㄕ',
    'ㄕㄡ',
    'ㄕㄨ',
    'ㄕㄨㄚ',
    'ㄕㄨㄞ',
    'ㄕㄨㄢ',
    'ㄕㄨㄤ',
    'ㄕㄨㄟ',
    'ㄕㄨㄣ',
    'ㄕㄨㄛ',
    'ㄖㄢ',
    'ㄖㄤ',
    'ㄖㄠ',
    'ㄖㄜ',
    'ㄖㄣ',
    'ㄖㄥ',
    'ㄖ',
    'ㄖㄨㄛ',
    'ㄖㄡ',
    'ㄖㄨ',
    'ㄖㄨㄢ',
    'ㄖㄨㄟ',
    'ㄖㄨㄣ',
    'ㄖㄨㄥ',
    'ㄗㄚ',
    'ㄗㄞ',
    'ㄗㄢ',
    'ㄗㄤ',
    'ㄗㄠ',
    'ㄗㄜ',
    'ㄗㄟ',
    'ㄗㄣ',
    'ㄗㄥ',
    'ㄗㄨㄛ',
    'ㄗㄡ',
    'ㄗㄨ',
    'ㄗㄨㄢ',
    'ㄗㄨㄟ',
    'ㄗㄨㄣ',
    'ㄗㄨㄥ',
    'ㄗ',
    'ㄘㄚ',
    'ㄘㄞ',
    'ㄘㄢ',
    'ㄘㄤ',
    'ㄘㄠ',
    'ㄘㄜ',
    'ㄘㄣ',
    'ㄘㄥ',
    'ㄘㄨㄛ',
    'ㄘㄡ',
    'ㄘㄨ',
    'ㄘㄨㄢ',
    'ㄘㄨㄟ',
    'ㄘㄨㄣ',
    'ㄘㄨㄥ',
    'ㄘ',
    'ㄙㄚ',
    'ㄙㄞ',
    'ㄙㄢ',
    'ㄙㄤ',
    'ㄙㄠ',
    'ㄙㄜ',
    'ㄙㄣ',
    'ㄙㄥ',
    'ㄙㄨㄛ',
    'ㄙㄡ',
    'ㄙㄨ',
    'ㄙㄨㄢ',
    'ㄙㄨㄟ',
    'ㄙㄨㄣ',
    'ㄙㄨㄥ',
    'ㄙ',
    'ㄧㄚ',
    'ㄧㄞ',
    'ㄧㄤ',
    'ㄧㄠ',
    'ㄧㄝ',
    'ㄧㄢ',
    'ㄧ',
    'ㄧㄣ',
    'ㄧㄥ',
    'ㄧㄡ',
    'ㄨㄚ',
    'ㄨㄞ',
    'ㄨㄢ',
    'ㄨㄤ',
    'ㄨㄟ',
    'ㄨㄣ',
    'ㄨㄥ',
    'ㄨㄛ',
    'ㄨ',
    'ㄩㄥ',
    'ㄩ',
    'ㄩㄢ',
    'ㄩㄝ',
    'ㄩㄣ',
    'ㄚ',
    'ㄞ',
    'ㄢ',
    'ㄤ',
    'ㄠ',
    'ㄜ',
    'ㄣ',
    'ㄥ',
    'ㄡ',
    'ㄦ',
  ];

  Future<List<String>> next_symbols(int k) async {
    Random r = Random(0);
    // omit the last symbol (space)
    int n = _bindings.length - 1;
    List<String> keys = _bindings.keys.toList();
    List<String> xs = [];
    for (int i = 0; i < k; i++) {
      int j = r.nextInt(n);
      xs.add(keys[j]);
    }
    return xs;
  }
  
  Future<List<String>> next_combos(int k) async {
    Random r = Random(0);
    int n = combos.length;
    int m = accents.length;
    List<String> xs = [];
    for (int i = 0; i < k; i++) {
      int j = r.nextInt(n);
      int jj = r.nextInt(m);
      String combo = combos[j] + accents[jj];
      xs.add(combo);
    }
    return xs;
  }

  Future<List<String>> keys() async => _bindings.keys;
  
  Future<Map<String,String>> bindings() async => _bindings;

}
